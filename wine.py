# -*- coding: utf-8 -*-
"""5-1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pghCtsxnBLSdBIivmEc9Si3kst-lFjn3
"""

import pandas as pd
wine = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/머신러닝/자료/wine.csv')
wine.head()

wine.info()

wine.describe()

data = wine[['alcohol','sugar','pH']].to_numpy()
target = wine['class'].to_numpy()

from sklearn.model_selection import train_test_split

train_input, test_input, train_target, test_target = train_test_split(
    data,target,test_size =0.2,random_state = 42)

print(train_input.shape,test_input.shape)

from sklearn.preprocessing import StandardScaler

ss = StandardScaler()
ss.fit(train_input)

train_scaled = ss.transform(train_input)
test_scaled = ss.transform(test_input)

from sklearn.linear_model import LogisticRegression
lr = LogisticRegression()
lr.fit(train_scaled, train_target)

print(lr.score(train_scaled,train_target))
print(lr.score(test_scaled,test_target))

print(lr.coef_,lr.intercept_)

from sklearn.tree import DecisionTreeClassifier

dt = DecisionTreeClassifier(random_state=42)
dt.fit(train_scaled,train_target)

print('train score: ',dt.score(train_scaled,train_target))
print('test score: ',dt.score(test_scaled,test_target))

import matplotlib.pyplot as plt
from sklearn.tree import plot_tree

plt.figure(figsize = (10,7))
plot_tree(dt)
plt.show()

plt.figure(figsize=(10,7))
plot_tree(dt,max_depth=1,filled=True,feature_names=['alcohol','sugar','pH'])
plt.show()

dt = DecisionTreeClassifier(max_depth=3,random_state=42)

dt.fit(train_scaled, train_target)
print(dt.score(train_scaled,train_target))
print(dt.score(test_scaled,test_target))

plt.figure(figsize=(20,15))
plot_tree(dt,filled=True,feature_names = ['alcohol','sugar','pH'])
plt.show()

dt = DecisionTreeClassifier(max_depth=3,random_state=42)

dt.fit(train_input, train_target)
print(dt.score(train_input,train_target))
print(dt.score(test_input,test_target))

plt.figure(figsize=(20,15))
plot_tree(dt,filled=True,feature_names = ['alcohol','sugar','pH'])
plt.show()

print(dt.feature_importances_)

dt = DecisionTreeClassifier(min_impurity_decrease=0.0005,random_state=42)

dt.fit(train_input, train_target)
print(dt.score(train_input,train_target))
print(dt.score(test_input,test_target))

plt.figure(figsize=(20,15))
plot_tree(dt,filled=True,feature_names = ['alcohol','sugar','pH'])
plt.show()

